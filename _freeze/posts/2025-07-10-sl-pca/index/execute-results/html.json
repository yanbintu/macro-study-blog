{
  "hash": "ba0b99901ddb680bec5698db75b98ea4",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"中国宏观经济数据中的潜在因子\"\nauthor: \"Tu\"\ndate: \"2025-07-10\"\ncategories: [macro,code,data]\njupyter: python3\n---\n\n本篇文章是借着小学期课程《统计学习》的课程报告要求对中国宏观数据中的潜在因子进行一个十分naive的探索，其中存在诸多未加仔细考虑的处理，待日后有机会再进行改进。\n\n# 背景\n\n\n\n# 方法论\n\n\n\n# 数据集\n\n本文使用的数据集来自查涛\n\n::: {#1b1c75b7 .cell execution_count=1}\n``` {.python .cell-code}\nimport numpy as np\nimport pandas as pd\n\ndf = pd.read_excel(\"2024-07-data/2407Release/outdata2407_hz_quarterly.xlsx\", index_col=0, engine=\"openpyxl\")\nprint(df.head())\nprint(df.info())\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n              CPI  RetailPriceIndex  FAIPriceIndex  GFCFPriceIndex  \\\nq_dates_data                                                         \n1949.00       NaN               NaN            NaN             NaN   \n1949.25       NaN               NaN            NaN             NaN   \n1949.50       NaN               NaN            NaN             NaN   \n1949.75       NaN               NaN            NaN             NaN   \n1950.00       NaN               NaN            NaN             NaN   \n\n              NominalRetailGoodsC  NominalFAI  NominalFAIGovt  NominalFAIPriv  \\\nq_dates_data                                                                    \n1949.00                       NaN         NaN             NaN             NaN   \n1949.25                       NaN         NaN             NaN             NaN   \n1949.50                       NaN         NaN             NaN             NaN   \n1949.75                       NaN         NaN             NaN             NaN   \n1950.00                       NaN         NaN             NaN             NaN   \n\n              NominalFAISOEexGovt  NominalFAINonSOE  ...  GFCFPrice  \\\nq_dates_data                                         ...              \n1949.00                       NaN               NaN  ...        NaN   \n1949.25                       NaN               NaN  ...        NaN   \n1949.50                       NaN               NaN  ...        NaN   \n1949.75                       NaN               NaN  ...        NaN   \n1950.00                       NaN               NaN  ...        NaN   \n\n              NonConstrEmp  ConstrEmp  NonConstrWage  ConstrWage  InvRETotal  \\\nq_dates_data                                                                   \n1949.00                NaN        NaN            NaN         NaN         NaN   \n1949.25                NaN        NaN            NaN         NaN         NaN   \n1949.50                NaN        NaN            NaN         NaN         NaN   \n1949.75                NaN        NaN            NaN         NaN         NaN   \n1950.00                NaN        NaN            NaN         NaN         NaN   \n\n              FAIRETotal  FAIRETotalBack  NSTRGFCF  NRESSTRGFCF  \nq_dates_data                                                     \n1949.00              NaN             NaN       NaN          NaN  \n1949.25              NaN             NaN       NaN          NaN  \n1949.50              NaN             NaN       NaN          NaN  \n1949.75              NaN             NaN       NaN          NaN  \n1950.00              NaN             NaN       NaN          NaN  \n\n[5 rows x 98 columns]\n<class 'pandas.core.frame.DataFrame'>\nIndex: 308 entries, 1949.0 to 2025.75\nData columns (total 98 columns):\n #   Column                        Non-Null Count  Dtype  \n---  ------                        --------------  -----  \n 0   CPI                           162 non-null    float64\n 1   RetailPriceIndex              148 non-null    float64\n 2   FAIPriceIndex                 144 non-null    float64\n 3   GFCFPriceIndex                144 non-null    float64\n 4   NominalRetailGoodsC           138 non-null    float64\n 5   NominalFAI                    138 non-null    float64\n 6   NominalFAIGovt                92 non-null     float64\n 7   NominalFAIPriv                92 non-null     float64\n 8   NominalFAISOEexGovt           92 non-null     float64\n 9   NominalFAINonSOE              92 non-null     float64\n 10  NominalGDP                    128 non-null    float64\n 11  NominalNetExports             128 non-null    float64\n 12  NominalExportsGoods           130 non-null    float64\n 13  NominalImportsGoods           130 non-null    float64\n 14  NominalHHC                    136 non-null    float64\n 15  NominalGovtC                  136 non-null    float64\n 16  NominalGCF                    128 non-null    float64\n 17  NominalInvty                  128 non-null    float64\n 18  NominalGFCF                   136 non-null    float64\n 19  NominalGovtGFCF               116 non-null    float64\n 20  NominalPrivGFCF               92 non-null     float64\n 21  NominalHHGFCF                 128 non-null    float64\n 22  NominalSOEGFCF                92 non-null     float64\n 23  NominalSOEexGovtGFCF          92 non-null     float64\n 24  NominalNonSOEGFCF             92 non-null     float64\n 25  NominalBusGFCF                92 non-null     float64\n 26  NominalNarOutput              92 non-null     float64\n 27  RatioGFCFPrice2CPI            144 non-null    float64\n 28  LaborIncome                   75 non-null     float64\n 29  LaborIncomeShare              75 non-null     float64\n 30  LaborCompSumProvinces         72 non-null     float64\n 31  DPI                           75 non-null     float64\n 32  AvgNominalWage                128 non-null    float64\n 33  ReserveMoney                  125 non-null    float64\n 34  M0                            137 non-null    float64\n 35  M2                            137 non-null    float64\n 36  RRR                           158 non-null    float64\n 37  ARR                           125 non-null    float64\n 38  ERR                           125 non-null    float64\n 39  R3mDeposit                    141 non-null    float64\n 40  R1dRepo                       114 non-null    float64\n 41  BankLoansMLT                  122 non-null    float64\n 42  NewBankLoansNFEST             122 non-null    float64\n 43  NewBankLoansNFESTBF           122 non-null    float64\n 44  NewBankLoansNFEMLT            118 non-null    float64\n 45  logrealHHC                    136 non-null    float64\n 46  logrealBusI                   92 non-null     float64\n 47  logrealHHC_nipa               128 non-null    float64\n 48  logrealBusI_nipa              92 non-null     float64\n 49  logrealNarrowY_nipa           92 non-null     float64\n 50  logrealGDP_nipa               128 non-null    float64\n 51  logrealGDP_va                 130 non-null    float64\n 52  logrealLaborIncome            75 non-null     float64\n 53  logrealDPI                    75 non-null     float64\n 54  logM2                         137 non-null    float64\n 55  ratioNewLoansNFEST2GDP        120 non-null    float64\n 56  ratioNewLoansNFESTBF2GDP      120 non-null    float64\n 57  ratioNewLoansNFEMLT2GDP       116 non-null    float64\n 58  LendingRatePBC1year           130 non-null    float64\n 59  DepositRatePBC1year           130 non-null    float64\n 60  Employment                    120 non-null    float64\n 61  NVA_InpOut_Heavy              95 non-null     float64\n 62  NVA_InpOut_Light              95 non-null     float64\n 63  NHeavyFAI                     104 non-null    float64\n 64  NLightFAI                     104 non-null    float64\n 65  PPI                           130 non-null    float64\n 66  LandPrice                     50 non-null     float64\n 67  FAInvPrice                    144 non-null    float64\n 68  NominalGDPva                  130 non-null    float64\n 69  RealGDPva                     134 non-null    float64\n 70  GDPDeflator                   130 non-null    float64\n 71  R7dRepo                       114 non-null    float64\n 72  BankLoansTotal                132 non-null    float64\n 73  BankLoansST                   122 non-null    float64\n 74  NGDPva_Heavy                  95 non-null     float64\n 75  NGDPva_Light                  95 non-null     float64\n 76  EntrustedLoans                91 non-null     float64\n 77  TrustedLoans                  91 non-null     float64\n 78  BankAccts                     91 non-null     float64\n 79  ShowdowBanking                91 non-null     float64\n 80  AggFinancing                  90 non-null     float64\n 81  RealEstateDomesticLoanFAI     106 non-null    float64\n 82  HeavyIndustryDomesticLoanFAI  52 non-null     float64\n 83  LightIndustryDomesticLoanFAI  52 non-null     float64\n 84  pop                           296 non-null    float64\n 85  CPriceExHousing               124 non-null    float64\n 86  NonFinBusinessLoans           117 non-null    float64\n 87  ResidentialInvestment         128 non-null    float64\n 88  GFCFPrice                     108 non-null    float64\n 89  NonConstrEmp                  119 non-null    float64\n 90  ConstrEmp                     119 non-null    float64\n 91  NonConstrWage                 128 non-null    float64\n 92  ConstrWage                    128 non-null    float64\n 93  InvRETotal                    122 non-null    float64\n 94  FAIRETotal                    56 non-null     float64\n 95  FAIRETotalBack                96 non-null     float64\n 96  NSTRGFCF                      120 non-null    float64\n 97  NRESSTRGFCF                   112 non-null    float64\ndtypes: float64(98)\nmemory usage: 238.2 KB\nNone\n```\n:::\n:::\n\n\n::: {#d7966bcf .cell execution_count=2}\n``` {.python .cell-code}\nqt_idx = pd.period_range(start='1949Q1', end='2025Q4', freq='Q')\ndf.index = qt_idx\nprint(df.head())\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n        CPI  RetailPriceIndex  FAIPriceIndex  GFCFPriceIndex  \\\n1949Q1  NaN               NaN            NaN             NaN   \n1949Q2  NaN               NaN            NaN             NaN   \n1949Q3  NaN               NaN            NaN             NaN   \n1949Q4  NaN               NaN            NaN             NaN   \n1950Q1  NaN               NaN            NaN             NaN   \n\n        NominalRetailGoodsC  NominalFAI  NominalFAIGovt  NominalFAIPriv  \\\n1949Q1                  NaN         NaN             NaN             NaN   \n1949Q2                  NaN         NaN             NaN             NaN   \n1949Q3                  NaN         NaN             NaN             NaN   \n1949Q4                  NaN         NaN             NaN             NaN   \n1950Q1                  NaN         NaN             NaN             NaN   \n\n        NominalFAISOEexGovt  NominalFAINonSOE  ...  GFCFPrice  NonConstrEmp  \\\n1949Q1                  NaN               NaN  ...        NaN           NaN   \n1949Q2                  NaN               NaN  ...        NaN           NaN   \n1949Q3                  NaN               NaN  ...        NaN           NaN   \n1949Q4                  NaN               NaN  ...        NaN           NaN   \n1950Q1                  NaN               NaN  ...        NaN           NaN   \n\n        ConstrEmp  NonConstrWage  ConstrWage  InvRETotal  FAIRETotal  \\\n1949Q1        NaN            NaN         NaN         NaN         NaN   \n1949Q2        NaN            NaN         NaN         NaN         NaN   \n1949Q3        NaN            NaN         NaN         NaN         NaN   \n1949Q4        NaN            NaN         NaN         NaN         NaN   \n1950Q1        NaN            NaN         NaN         NaN         NaN   \n\n        FAIRETotalBack  NSTRGFCF  NRESSTRGFCF  \n1949Q1             NaN       NaN          NaN  \n1949Q2             NaN       NaN          NaN  \n1949Q3             NaN       NaN          NaN  \n1949Q4             NaN       NaN          NaN  \n1950Q1             NaN       NaN          NaN  \n\n[5 rows x 98 columns]\n```\n:::\n:::\n\n\n::: {#7b6fe7bd .cell execution_count=3}\n``` {.python .cell-code}\n# 2. 定义名义→实际的映射\ndeflators = {\n    \"NominalGDPva\": \"GDPDeflator\",\n    \"NominalGDP\": \"GDPDeflator\",\n    \"NominalHHC\": \"CPI\",\n    \"NominalGovtC\": \"CPI\",\n    \"NominalRetailGoodsC\": \"RetailPriceIndex\",\n    # 固定资产投资系列\n    \"NominalFAI\": \"FAIPriceIndex\",\n    \"NominalFAIGovt\": \"FAIPriceIndex\",\n    \"NominalFAIPriv\": \"FAIPriceIndex\",\n    \"NominalFAISOEexGovt\": \"FAIPriceIndex\",\n    \"NominalFAINonSOE\": \"FAIPriceIndex\",\n    \"NominalGFCF\": \"GFCFPriceIndex\",\n    \"NominalGovtGFCF\": \"GFCFPriceIndex\",\n    \"NominalPrivGFCF\": \"GFCFPriceIndex\",\n    \"NominalHHGFCF\": \"GFCFPriceIndex\",\n    \"NominalSOEGFCF\": \"GFCFPriceIndex\",\n    \"NominalSOEexGovtGFCF\": \"GFCFPriceIndex\",\n    \"NominalNonSOEGFCF\": \"GFCFPriceIndex\",\n    \"NominalBusGFCF\": \"GFCFPriceIndex\",\n    # 可选：出口进口用 GDPDeflator（或更细指数）\n    \"NominalExportsGoods\": \"GDPDeflator\",\n    \"NominalImportsGoods\": \"GDPDeflator\",\n    \"NominalNetExports\": \"GDPDeflator\",\n    \"NominalInvty\": \"GFCFPriceIndex\",\n    \"NominalNarOutput\": \"GDPDeflator\",\n}\ndf_real = pd.DataFrame()\n# 3. 循环平减，生成新的“实际”列\nfor nom, idx in deflators.items():\n    real_name = nom.replace(\"Nominal\",\"\")\n    df_real[real_name] = df[nom] / df[idx]\n\ndf_real['Employment'] = df['Employment']\nprint(df_real.info())\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<class 'pandas.core.frame.DataFrame'>\nPeriodIndex: 308 entries, 1949Q1 to 2025Q4\nFreq: Q-DEC\nData columns (total 24 columns):\n #   Column         Non-Null Count  Dtype  \n---  ------         --------------  -----  \n 0   GDPva          130 non-null    float64\n 1   GDP            128 non-null    float64\n 2   HHC            136 non-null    float64\n 3   GovtC          136 non-null    float64\n 4   RetailGoodsC   132 non-null    float64\n 5   FAI            120 non-null    float64\n 6   FAIGovt        92 non-null     float64\n 7   FAIPriv        92 non-null     float64\n 8   FAISOEexGovt   92 non-null     float64\n 9   FAINonSOE      92 non-null     float64\n 10  GFCF           120 non-null    float64\n 11  GovtGFCF       100 non-null    float64\n 12  PrivGFCF       92 non-null     float64\n 13  HHGFCF         112 non-null    float64\n 14  SOEGFCF        92 non-null     float64\n 15  SOEexGovtGFCF  92 non-null     float64\n 16  NonSOEGFCF     92 non-null     float64\n 17  BusGFCF        92 non-null     float64\n 18  ExportsGoods   130 non-null    float64\n 19  ImportsGoods   130 non-null    float64\n 20  NetExports     128 non-null    float64\n 21  Invty          112 non-null    float64\n 22  NarOutput      92 non-null     float64\n 23  Employment     120 non-null    float64\ndtypes: float64(24)\nmemory usage: 60.2 KB\nNone\n```\n:::\n:::\n\n\n::: {#073e9080 .cell execution_count=4}\n``` {.python .cell-code}\ndf_real = np.log(df_real).diff().dropna()\ndf_real = (df_real - df_real.mean()) / df_real.std(ddof=0)\nprint(df_real.info())\ndf_real.describe()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<class 'pandas.core.frame.DataFrame'>\nPeriodIndex: 80 entries, 1995Q2 to 2017Q4\nFreq: Q-DEC\nData columns (total 24 columns):\n #   Column         Non-Null Count  Dtype  \n---  ------         --------------  -----  \n 0   GDPva          80 non-null     float64\n 1   GDP            80 non-null     float64\n 2   HHC            80 non-null     float64\n 3   GovtC          80 non-null     float64\n 4   RetailGoodsC   80 non-null     float64\n 5   FAI            80 non-null     float64\n 6   FAIGovt        80 non-null     float64\n 7   FAIPriv        80 non-null     float64\n 8   FAISOEexGovt   80 non-null     float64\n 9   FAINonSOE      80 non-null     float64\n 10  GFCF           80 non-null     float64\n 11  GovtGFCF       80 non-null     float64\n 12  PrivGFCF       80 non-null     float64\n 13  HHGFCF         80 non-null     float64\n 14  SOEGFCF        80 non-null     float64\n 15  SOEexGovtGFCF  80 non-null     float64\n 16  NonSOEGFCF     80 non-null     float64\n 17  BusGFCF        80 non-null     float64\n 18  ExportsGoods   80 non-null     float64\n 19  ImportsGoods   80 non-null     float64\n 20  NetExports     80 non-null     float64\n 21  Invty          80 non-null     float64\n 22  NarOutput      80 non-null     float64\n 23  Employment     80 non-null     float64\ndtypes: float64(24)\nmemory usage: 15.6 KB\nNone\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nC:\\Users\\TYB\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\pandas\\core\\internals\\blocks.py:395: RuntimeWarning:\n\ninvalid value encountered in log\n\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=4}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>GDPva</th>\n      <th>GDP</th>\n      <th>HHC</th>\n      <th>GovtC</th>\n      <th>RetailGoodsC</th>\n      <th>FAI</th>\n      <th>FAIGovt</th>\n      <th>FAIPriv</th>\n      <th>FAISOEexGovt</th>\n      <th>FAINonSOE</th>\n      <th>...</th>\n      <th>SOEGFCF</th>\n      <th>SOEexGovtGFCF</th>\n      <th>NonSOEGFCF</th>\n      <th>BusGFCF</th>\n      <th>ExportsGoods</th>\n      <th>ImportsGoods</th>\n      <th>NetExports</th>\n      <th>Invty</th>\n      <th>NarOutput</th>\n      <th>Employment</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>8.000000e+01</td>\n      <td>8.000000e+01</td>\n      <td>8.000000e+01</td>\n      <td>8.000000e+01</td>\n      <td>8.000000e+01</td>\n      <td>8.000000e+01</td>\n      <td>8.000000e+01</td>\n      <td>8.000000e+01</td>\n      <td>8.000000e+01</td>\n      <td>8.000000e+01</td>\n      <td>...</td>\n      <td>8.000000e+01</td>\n      <td>8.000000e+01</td>\n      <td>80.000000</td>\n      <td>8.000000e+01</td>\n      <td>8.000000e+01</td>\n      <td>8.000000e+01</td>\n      <td>8.000000e+01</td>\n      <td>8.000000e+01</td>\n      <td>8.000000e+01</td>\n      <td>8.000000e+01</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>1.110223e-16</td>\n      <td>2.275957e-16</td>\n      <td>1.332268e-16</td>\n      <td>4.440892e-17</td>\n      <td>1.221245e-16</td>\n      <td>-4.440892e-17</td>\n      <td>3.330669e-17</td>\n      <td>8.326673e-18</td>\n      <td>1.942890e-17</td>\n      <td>1.110223e-17</td>\n      <td>...</td>\n      <td>1.110223e-17</td>\n      <td>-5.551115e-18</td>\n      <td>0.000000</td>\n      <td>2.220446e-17</td>\n      <td>-1.665335e-17</td>\n      <td>-5.551115e-18</td>\n      <td>-4.440892e-17</td>\n      <td>1.110223e-17</td>\n      <td>8.881784e-17</td>\n      <td>-8.326673e-18</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>1.006309e+00</td>\n      <td>1.006309e+00</td>\n      <td>1.006309e+00</td>\n      <td>1.006309e+00</td>\n      <td>1.006309e+00</td>\n      <td>1.006309e+00</td>\n      <td>1.006309e+00</td>\n      <td>1.006309e+00</td>\n      <td>1.006309e+00</td>\n      <td>1.006309e+00</td>\n      <td>...</td>\n      <td>1.006309e+00</td>\n      <td>1.006309e+00</td>\n      <td>1.006309</td>\n      <td>1.006309e+00</td>\n      <td>1.006309e+00</td>\n      <td>1.006309e+00</td>\n      <td>1.006309e+00</td>\n      <td>1.006309e+00</td>\n      <td>1.006309e+00</td>\n      <td>1.006309e+00</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>-3.262650e+00</td>\n      <td>-3.097947e+00</td>\n      <td>-2.592509e+00</td>\n      <td>-2.092373e+00</td>\n      <td>-1.921999e+00</td>\n      <td>-2.779818e+00</td>\n      <td>-2.218834e+00</td>\n      <td>-3.051627e+00</td>\n      <td>-2.717178e+00</td>\n      <td>-2.484584e+00</td>\n      <td>...</td>\n      <td>-2.773639e+00</td>\n      <td>-3.840951e+00</td>\n      <td>-2.152881</td>\n      <td>-2.149597e+00</td>\n      <td>-2.293289e+00</td>\n      <td>-3.177173e+00</td>\n      <td>-4.561405e+00</td>\n      <td>-2.834373e+00</td>\n      <td>-2.998988e+00</td>\n      <td>-1.710725e+00</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>-6.473529e-01</td>\n      <td>-7.213737e-01</td>\n      <td>-7.005065e-01</td>\n      <td>-7.302102e-01</td>\n      <td>-6.947349e-01</td>\n      <td>-4.280261e-01</td>\n      <td>-4.777254e-01</td>\n      <td>-3.810996e-01</td>\n      <td>-5.763187e-01</td>\n      <td>-5.548189e-01</td>\n      <td>...</td>\n      <td>-6.794940e-01</td>\n      <td>-4.497280e-01</td>\n      <td>-0.786107</td>\n      <td>-5.103018e-01</td>\n      <td>-5.428286e-01</td>\n      <td>-6.438896e-01</td>\n      <td>-3.947324e-01</td>\n      <td>-4.834983e-01</td>\n      <td>-6.558540e-01</td>\n      <td>-9.306374e-01</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>-5.324429e-02</td>\n      <td>-6.052174e-02</td>\n      <td>-4.007569e-02</td>\n      <td>7.104155e-02</td>\n      <td>-1.256486e-01</td>\n      <td>-1.787626e-02</td>\n      <td>-5.336319e-02</td>\n      <td>5.454730e-02</td>\n      <td>-5.200166e-02</td>\n      <td>7.723891e-02</td>\n      <td>...</td>\n      <td>-4.555191e-02</td>\n      <td>-3.840861e-02</td>\n      <td>0.010440</td>\n      <td>-8.055571e-02</td>\n      <td>-3.571270e-02</td>\n      <td>-1.173677e-01</td>\n      <td>2.568079e-02</td>\n      <td>5.002997e-04</td>\n      <td>-3.920563e-02</td>\n      <td>-1.210673e-01</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>4.383371e-01</td>\n      <td>4.280667e-01</td>\n      <td>5.503664e-01</td>\n      <td>5.721200e-01</td>\n      <td>5.524573e-01</td>\n      <td>4.098986e-01</td>\n      <td>3.637253e-01</td>\n      <td>4.299774e-01</td>\n      <td>4.674207e-01</td>\n      <td>4.761095e-01</td>\n      <td>...</td>\n      <td>5.860901e-01</td>\n      <td>5.917704e-01</td>\n      <td>0.486068</td>\n      <td>3.978879e-01</td>\n      <td>7.196667e-01</td>\n      <td>5.840798e-01</td>\n      <td>5.611978e-01</td>\n      <td>4.882645e-01</td>\n      <td>5.403059e-01</td>\n      <td>9.300085e-01</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>3.459647e+00</td>\n      <td>3.608773e+00</td>\n      <td>2.913269e+00</td>\n      <td>2.328583e+00</td>\n      <td>3.493561e+00</td>\n      <td>4.530611e+00</td>\n      <td>3.926365e+00</td>\n      <td>4.191774e+00</td>\n      <td>3.861173e+00</td>\n      <td>4.180745e+00</td>\n      <td>...</td>\n      <td>2.790246e+00</td>\n      <td>3.302967e+00</td>\n      <td>3.203683</td>\n      <td>3.532461e+00</td>\n      <td>2.232047e+00</td>\n      <td>2.297526e+00</td>\n      <td>2.876421e+00</td>\n      <td>3.582924e+00</td>\n      <td>3.204487e+00</td>\n      <td>1.990042e+00</td>\n    </tr>\n  </tbody>\n</table>\n<p>8 rows × 24 columns</p>\n</div>\n```\n:::\n:::\n\n\n# 结果\n\n::: {#0c24ab17 .cell execution_count=5}\n``` {.python .cell-code}\nimport pandas as pd\nfrom statsmodels.multivariate.pca import PCA\nimport matplotlib.pyplot as plt\n\n# 假设 df_real 是你已经标准化（零均值、单位方差）且以时间索引的 DataFrame\n\n# 1. 用 statsmodels 做 PCA\n#    standardize=False 表示我们的数据已经被标准化过了\npca = PCA(df_real, standardize=False)\n\n# 2. 提取各主成分的特征值（eigenvalues）\neigenvals = pca.eigenvals  # pandas Series，索引是组件编号\n\n# 3. 计算方差贡献率（比例）\nvar_explained = eigenvals / eigenvals.sum()\n\n# 4. 画 Scree Plot\nplt.figure(figsize=(6,4))\nplt.plot(\n    range(1, len(var_explained)+1), \n    var_explained.values, \n    marker='o'\n)\nplt.xlabel('Principal Component')\nplt.ylabel('Proportion of Variance Explained')\nplt.title('Scree Plot')\nplt.xticks(range(1, len(var_explained)+1))\nplt.grid(False)      # 按需打开/关闭网格\nplt.tight_layout()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-6-output-1.png){}\n:::\n:::\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}